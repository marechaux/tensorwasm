"""
@generated
cargo-raze crate build file.

DO NOT EDIT! Replaced on runs of cargo-raze
"""

# buildifier: disable=load
load("@bazel_skylib//lib:selects.bzl", "selects")

# buildifier: disable=load
load(
    "@rules_rust//rust:defs.bzl",
    "rust_binary",
    "rust_library",
    "rust_proc_macro",
    "rust_test",
)

package(default_visibility = [
    # Public for visibility by "@raze__crate__version//" targets.
    #
    # Prefer access through "//third_party/cargo", which limits external
    # visibility to explicit Cargo.toml dependencies.
    "//visibility:public",
])

licenses([
    "notice",  # Apache-2.0 from expression "Apache-2.0"
])

# Generated Targets
# buildifier: disable=out-of-order-load
# buildifier: disable=load-on-top
load(
    "@rules_rust//cargo:cargo_build_script.bzl",
    "cargo_build_script",
)

cargo_build_script(
    name = "wasmtime_runtime_build_script",
    srcs = glob(["**/*.rs"]),
    build_script_env = {
    },
    crate_features = [
        "async",
        "component-model",
        "memfd",
        "memory-init-cow",
        "pooling-allocator",
        "wasmtime-fiber",
    ],
    crate_root = "crates/runtime/build.rs",
    data = glob(["**"], exclude=["**/*.pdf"]),
    edition = "2021",
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "manual",
    ],
    version = "3.0.0",
    visibility = ["//visibility:private"],
    deps = [
        "@raze__cc__1_0_73//:cc",
    ] + selects.with_or({
        (
            "@rules_rust//rust/platform:x86_64-apple-darwin",
        ): [
        ],
        "//conditions:default": [],
    }) + selects.with_or({
        (
            "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
        ): [
            "@raze__windows_sys__0_36_1//:windows_sys",
        ],
        "//conditions:default": [],
    }) + selects.with_or({
        (
            "@rules_rust//rust/platform:x86_64-apple-darwin",
            "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
        ],
        "//conditions:default": [],
    }),
)

rust_library(
    name = "wasmtime_runtime",
    srcs = glob(["**/*.rs"]),
    aliases = {
    },
    crate_features = [
        "async",
        "component-model",
        "memfd",
        "memory-init-cow",
        "pooling-allocator",
        "wasmtime-fiber",
    ],
    crate_root = "crates/runtime/src/lib.rs",
    data = [],
    edition = "2021",
    proc_macro_deps = [
        "@raze__paste__1_0_9//:paste",
    ],
    rustc_flags = [
        "--cap-lints=allow",
    ],
    tags = [
        "cargo-raze",
        "crate-name=wasmtime-runtime",
        "manual",
    ],
    version = "3.0.0",
    # buildifier: leave-alone
    deps = [
        ":wasmtime_runtime_build_script",
        "@raze__anyhow__1_0_65//:anyhow",
        "@raze__cfg_if__1_0_0//:cfg_if",
        "@raze__encoding_rs__0_8_31//:encoding_rs",
        "@raze__indexmap__1_9_1//:indexmap",
        "@raze__libc__0_2_134//:libc",
        "@raze__log__0_4_17//:log",
        "@raze__memfd__0_6_1//:memfd",
        "@raze__memoffset__0_6_5//:memoffset",
        "@raze__rand__0_8_5//:rand",
        "@raze__thiserror__1_0_37//:thiserror",
        "@raze__wasmtime_asm_macros__3_0_0//:wasmtime_asm_macros",
        "@raze__wasmtime_environ__3_0_0//:wasmtime_environ",
        "@raze__wasmtime_fiber__3_0_0//:wasmtime_fiber",
        "@raze__wasmtime_jit_debug__3_0_0//:wasmtime_jit_debug",
    ] + selects.with_or({
        (
            "@rules_rust//rust/platform:x86_64-apple-darwin",
        ): [
            "@raze__mach__0_3_2//:mach",
        ],
        "//conditions:default": [],
    }) + selects.with_or({
        (
            "@rules_rust//rust/platform:x86_64-pc-windows-msvc",
        ): [
            "@raze__windows_sys__0_36_1//:windows_sys",
        ],
        "//conditions:default": [],
    }) + selects.with_or({
        (
            "@rules_rust//rust/platform:x86_64-apple-darwin",
            "@rules_rust//rust/platform:x86_64-unknown-linux-gnu",
        ): [
            "@raze__rustix__0_35_11//:rustix",
        ],
        "//conditions:default": [],
    }),
)
