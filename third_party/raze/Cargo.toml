[package]
name = "engine"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
anyhow = "1.0.65"
cxx = "1.0.78"
cxxbridge-cmd = "1.0.78"
cxxbridge-macro = "1.0.78"
# wasmtime = "1.0.1"
wit-bindgen-host-wasmtime-rust = { git = "https://github.com/bytecodealliance/wit-bindgen", rev = "f22e230007d3706dddfa14177450e69b7260557f" }
wit-bindgen-host-wasmtime-rust-macro = { git = "https://github.com/bytecodealliance/wit-bindgen", rev = "f22e230007d3706dddfa14177450e69b7260557f" }

[lib]
name = "engine"
# crate-type = ["cdylib"]      # Creates dynamic lib
crate-type = ["staticlib", "cdylib", "rlib"]

[package.metadata.raze]
# The path at which to write output files.
#
# `cargo raze` will generate Bazel-compatible BUILD files into this path.
# This can either be a relative path (e.g. "foo/bar"), relative to this
# Cargo.toml file; or relative to the Bazel workspace root (e.g. "//foo/bar").
workspace_path = "//third_party/cargo"

# This causes aliases for dependencies to be rendered in the BUILD
# file located next to this `Cargo.toml` file.
package_aliases_dir = "."

# The set of targets to generate BUILD rules for.
targets = [
    "x86_64-apple-darwin",
    "x86_64-pc-windows-msvc",
    "x86_64-unknown-linux-gnu",
]

# The two acceptable options are "Remote" and "Vendored" which
# is used to indicate whether the user is using a non-vendored or
# vendored set of dependencies.
genmode = "Remote"

[package.metadata.raze.crates.rustix.'*']
skipped_deps = [
    "libc-0.2.134"
]
additional_deps = ["@raze__libc__0_2_134//:libc"]

[package.metadata.raze.crates.bumpalo.'*']
data_dependencies = [
    "README.md"
]

[package.metadata.raze.crates.cranelift-isle.'*']
data_dependencies = [
    "README.md"
]
gen_buildrs = false
patches = [
    "@//third_party/raze:cranelift-isle.patch",
]

[package.metadata.raze.crates.clap.'*']
data_dependencies = [
    "examples/demo.md"
]

[package.metadata.raze.crates.cxx.'*']
# gen_buildrs = false
# extra_aliased_targets = ["cxx_cc"]
# default-members = []
data_attr = 'glob(["**/*.h", "**/*.cc"])'
extra_aliased_targets = [
    "cxx_cc_library"
]


[package.metadata.raze.crates.cxxbridge-cmd.'*']
compile_data_attr = "[\"src/gen/include/cxx.h\"]"
extra_aliased_targets = ["cargo_bin_cxxbridge"]


# [package.metadata.raze.crates.wasmtime.'*']
# patches = [
#     "@//third_party/raze:wasmtime.patch",
# ]
# compile_data_attr = "glob([\"**\"], exclude=[\"**/*.pdf\"])"


[package.metadata.raze.crates.wasmtime-runtime.'*']
patches = [
    "@//third_party/raze:wasmtime-runtime.patch",
]


# [package.metadata.raze.crates.wasmtime-fiber.'*']
# gen_buildrs = false

# [package.metadata.raze.crates.wasmtime-cache.'*']
# gen_buildrs = false


# [package.metadata.raze.crates.cranelift-codegen.'*']
# gen_buildrs = false

[package.metadata.raze.crates.cranelift-codegen.'*']
patches = [
    "@//third_party/raze:cranelift-codegen.patch",
]

# TODO replace script with raze rule
